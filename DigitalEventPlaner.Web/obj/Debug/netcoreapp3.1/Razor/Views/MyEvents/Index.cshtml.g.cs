#pragma checksum "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bde23fe5d4716cf5bf334a56288cc61901d77d67"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_MyEvents_Index), @"mvc.1.0.view", @"/Views/MyEvents/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/_ViewImports.cshtml"
using DigitalEventPlaner.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/_ViewImports.cshtml"
using DigitalEventPlaner.Web.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
using DigitalEventPlaner.Web.Models.MyEvents;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bde23fe5d4716cf5bf334a56288cc61901d77d67", @"/Views/MyEvents/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c9a0b353c39294cfce461987624b6e33695d1733", @"/Views/_ViewImports.cshtml")]
    public class Views_MyEvents_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<EventWrappersSortedViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "MyEvents", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "UploadForSmartRating", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
  
    ViewData["Title"] = "Profile Page";
    Layout = "~/Views/Shared/_CustomerLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\n<h3>My events</h3>\n\n");
#nullable restore
#line 10 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
 if (Model.NeedsApproval.Count() > 0)
{

#line default
#line hidden
#nullable disable
            WriteLiteral("    <h3>Awaiting approval</h3>\n");
#nullable restore
#line 13 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
     foreach (var ev in Model.NeedsApproval)
    {

#line default
#line hidden
#nullable disable
            WriteLiteral("        <div class=\"event-container\">\n            <h5>");
#nullable restore
#line 16 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
           Write(ev.EventDate.ToString("dd/MM/yyyy"));

#line default
#line hidden
#nullable disable
            WriteLiteral(" EventType: ");
#nullable restore
#line 16 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                                                           Write(ev.EventType);

#line default
#line hidden
#nullable disable
            WriteLiteral(" Status: ");
#nullable restore
#line 16 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                                                                                 Write(ev.EventStatus);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h5>\n");
#nullable restore
#line 17 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
             foreach (var service in ev.ServiceWrappers)
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <div class=\"list-group-item service-container\">\n                    <div> ");
#nullable restore
#line 20 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                     Write(service.Service.Name);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\n                </div>\n                <div class=\"list-group\">\n");
#nullable restore
#line 23 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                     foreach (var package in service.ServicePackages)
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <div class=\"list-group-item sublist-item\">\n                            <div>");
#nullable restore
#line 26 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                            Write(package.Description);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\n                            <div>");
#nullable restore
#line 27 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                            Write(service.Status);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\n");
#nullable restore
#line 28 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                             if (@service.Status == DataLayer.Enumerations.RequestStatus.Cancelled)
                            {
                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 30 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                           Write(Html.ActionLink("Change service", "ChangeService", "MyEvents", new { eventServiceId = service.EventServiceId, eventType = service.Service.ServiceType, eventDate = ev.EventDate }, new { @class = "btn btn-outline-primary btn-sm" }));

#line default
#line hidden
#nullable disable
#nullable restore
#line 30 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                                                                                                                                                                                                                                                                      
                            }

#line default
#line hidden
#nullable disable
            WriteLiteral("                        </div>\n");
#nullable restore
#line 33 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                </div>\n");
#nullable restore
#line 35 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
            }

#line default
#line hidden
#nullable disable
            WriteLiteral("        </div>\n");
#nullable restore
#line 37 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 37 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
     
}

#line default
#line hidden
#nullable disable
            WriteLiteral("\n");
#nullable restore
#line 40 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
 if (Model.Canceled.Count() > 0)
{

#line default
#line hidden
#nullable disable
            WriteLiteral("    <h3>Canceled</h3>\n");
#nullable restore
#line 43 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
     foreach (var ev in Model.Canceled)
    {

#line default
#line hidden
#nullable disable
            WriteLiteral("        <div class=\"event-container\">\n            <h5>");
#nullable restore
#line 46 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
           Write(ev.EventDate.ToString("dd/MM/yyyy"));

#line default
#line hidden
#nullable disable
            WriteLiteral(" EventType: ");
#nullable restore
#line 46 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                                                           Write(ev.EventType);

#line default
#line hidden
#nullable disable
            WriteLiteral(" Status: ");
#nullable restore
#line 46 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                                                                                 Write(ev.EventStatus);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h5>\n");
#nullable restore
#line 47 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
             foreach (var service in ev.ServiceWrappers)
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <div class=\"list-group-item service-container\">\n                    <div> ");
#nullable restore
#line 50 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                     Write(service.Service.Name);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\n                </div>\n                <div class=\"list-group\">\n");
#nullable restore
#line 53 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                     foreach (var package in service.ServicePackages)
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <div class=\"list-group-item sublist-item\">\n                            <div>");
#nullable restore
#line 56 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                            Write(package.Description);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\n                            <div>");
#nullable restore
#line 57 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                            Write(service.Status);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\n");
#nullable restore
#line 58 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                             if (@service.Status == DataLayer.Enumerations.RequestStatus.Cancelled)
                            {
                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 60 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                           Write(Html.ActionLink("Change service", "ChangeService", "MyEvents", new { eventServiceId = service.EventServiceId, eventType = service.Service.ServiceType, eventDate = ev.EventDate }, new { @class = "btn btn-outline-primary btn-sm" }));

#line default
#line hidden
#nullable disable
#nullable restore
#line 60 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                                                                                                                                                                                                                                                                      
                            }

#line default
#line hidden
#nullable disable
            WriteLiteral("                        </div>\n");
#nullable restore
#line 63 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                </div>\n");
#nullable restore
#line 65 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
            }

#line default
#line hidden
#nullable disable
            WriteLiteral("        </div>\n");
#nullable restore
#line 67 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 67 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
     
}

#line default
#line hidden
#nullable disable
            WriteLiteral("\n");
#nullable restore
#line 70 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
 if (Model.ToBeDone.Count() > 0)
{

#line default
#line hidden
#nullable disable
            WriteLiteral("    <h3>To be done</h3>\n");
#nullable restore
#line 73 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
     foreach (var ev in Model.ToBeDone)
    {

#line default
#line hidden
#nullable disable
            WriteLiteral("        <div class=\"event-container\">\n            <h5>");
#nullable restore
#line 76 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
           Write(ev.EventDate.ToString("dd/MM/yyyy"));

#line default
#line hidden
#nullable disable
            WriteLiteral(" EventType: ");
#nullable restore
#line 76 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                                                           Write(ev.EventType);

#line default
#line hidden
#nullable disable
            WriteLiteral(" Status: ");
#nullable restore
#line 76 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                                                                                 Write(ev.EventStatus);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h5>\n");
#nullable restore
#line 77 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
             foreach (var service in ev.ServiceWrappers)
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <div class=\"list-group-item service-container\">\n                    <div> ");
#nullable restore
#line 80 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                     Write(service.Service.Name);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\n                </div>\n                <div class=\"list-group\">\n");
#nullable restore
#line 83 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                     foreach (var package in service.ServicePackages)
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <div class=\"list-group-item sublist-item\">\n                            <div>");
#nullable restore
#line 86 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                            Write(package.Description);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\n                            <div>");
#nullable restore
#line 87 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                            Write(service.Status);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\n");
#nullable restore
#line 88 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                             if (@service.Status == DataLayer.Enumerations.RequestStatus.Cancelled)
                            {
                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 90 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                           Write(Html.ActionLink("Change service", "ChangeService", "MyEvents", new { eventServiceId = service.EventServiceId, eventType = service.Service.ServiceType, eventDate = ev.EventDate }, new { @class = "btn btn-outline-primary btn-sm" }));

#line default
#line hidden
#nullable disable
#nullable restore
#line 90 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                                                                                                                                                                                                                                                                      
                            }

#line default
#line hidden
#nullable disable
            WriteLiteral("                        </div>\n");
#nullable restore
#line 93 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                </div>\n");
#nullable restore
#line 95 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
            }

#line default
#line hidden
#nullable disable
            WriteLiteral("        </div>\n");
#nullable restore
#line 97 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 97 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
     
}

#line default
#line hidden
#nullable disable
            WriteLiteral("\n");
#nullable restore
#line 100 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
 if (Model.Done.Count() > 0)
{

#line default
#line hidden
#nullable disable
            WriteLiteral("    <h3>Done</h3>\n");
#nullable restore
#line 103 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
     foreach (var ev in Model.Done)
    {

#line default
#line hidden
#nullable disable
            WriteLiteral("    <div class=\"event-container\">\n        <h5>");
#nullable restore
#line 106 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
       Write(ev.EventDate.ToString("dd/MM/yyyy"));

#line default
#line hidden
#nullable disable
            WriteLiteral(" EventType: ");
#nullable restore
#line 106 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                                                       Write(ev.EventType);

#line default
#line hidden
#nullable disable
            WriteLiteral(" Status: ");
#nullable restore
#line 106 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                                                                             Write(ev.EventStatus);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h5>\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bde23fe5d4716cf5bf334a56288cc61901d77d6721829", async() => {
                WriteLiteral("\n            <input type=\"hidden\" name=\"EventId\"");
                BeginWriteAttribute("value", " value=\"", 4553, "\"", 4572, 1);
#nullable restore
#line 108 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
WriteAttributeValue("", 4561, ev.EventId, 4561, 11, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" />
            <div class=""form-group"">
                <input type=""file"" name=""Imagelist"" accept=""image/x-png,image/gif,image/jpeg, image/jpg"" multiple />
            </div>
            <div class=""form-group"">
                <input type=""submit"" value=""Upload"" class=""btn btn-default"" />
            </div>
        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n");
#nullable restore
#line 116 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
         foreach (var service in ev.ServiceWrappers)
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <div class=\"list-group-item service-container\">\n                <div> ");
#nullable restore
#line 119 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                 Write(service.Service.Name);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\n            </div>\n");
            WriteLiteral("            <div class=\"list-group\">\n");
#nullable restore
#line 123 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                 foreach (var package in service.ServicePackages)
                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                    <div class=\"list-group-item sublist-item\">\n                        <div>");
#nullable restore
#line 126 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                        Write(package.Description);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\n                        <div>");
#nullable restore
#line 127 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                        Write(service.Status);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\n\n                    </div>\n");
#nullable restore
#line 130 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
                }

#line default
#line hidden
#nullable disable
            WriteLiteral("            </div>\n");
#nullable restore
#line 132 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral("    </div>\n");
#nullable restore
#line 134 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 134 "/Users/cosmin/Documents/GitHub/Licenta/DigitalEventPlaner.Web/Views/MyEvents/Index.cshtml"
     
}

#line default
#line hidden
#nullable disable
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<EventWrappersSortedViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
